[{"content":"using upower command upower command will give lot more information about battery, like battery health, battery vendor, battery model.\nbattery model will help you to buy battery in case battery replacement\n1  upower -i /org/freedesktop/UPower/devices/battery_BAT0   here battery_BAT0 refer to first battery of your laptop\nif you using a laptop with extra battery like thinkpad t460s, t470s, You need to change battery index number to battery_BAT1. So command will be following\n1  upower -i /org/freedesktop/UPower/devices/battery_BAT1   In my case I am getting following output in my terminal\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  native-path: BAT1 vendor: SANYO 11 model: 00HW024 serial: 44224 power supply: yes updated: Thu 13 Aug 2020 13:34:12 +06 (39 seconds ago) has history: yes has statistics: yes battery present: yes rechargeable: yes state: charging warning-level: none energy: 23.12 Wh energy-empty: 0 Wh energy-full: 24.42 Wh energy-full-design: 24.42 Wh energy-rate: 9.679 W voltage: 12.94 V time to full: 8.1 minutes percentage: 94% capacity: 100% technology: lithium-ion icon-name: \u0026#39;battery-full-charging-symbolic\u0026#39; History (charge): 1597304052 94.000 charging History (rate): 1597304052 9.679 charging   using acpi command I found, I need only upower command to know more about my battery health and status\nFirst install acpi-tool\n1  snap install acpi-tools   1  sudo apt install acpi   just acpi command will show battery status\nI am getting following output from acpi commands\n1 2  Battery 0: Unknown, 99% Battery 1: Charging, 90%, 00:10:15 until charged   ","description":"","id":0,"section":"bits","tags":null,"title":"How to Check Battery Health and Battery Status in Ubuntu Linux","uri":"https://polodev.github.io/learning/bits/how-to-check-battery-health-and-battery-status-in-ubuntu-linux/"},{"content":"lscpu command lscpu is the simplest command that shows the cpu information like processor vendor, number of processor, cache, processor speed\n1  lscpu   best way to remember, list cpu for cpu\nArchitecture: x86_64 CPU op-mode(s): 32-bit, 64-bit Byte Order: Little Endian Address sizes: 39 bits physical, 48 bits virtual CPU(s): 4 On-line CPU(s) list: 0-3 Thread(s) per core: 2 Core(s) per socket: 2 Socket(s): 1 NUMA node(s): 1 Vendor ID: GenuineIntel CPU family: 6 Model: 78 Model name: Intel(R) Core(TM) i5-6300U CPU @ 2.40GHz Stepping: 3 CPU MHz: 1707.849 CPU max MHz: 3000.0000 CPU min MHz: 400.0000 BogoMIPS: 4999.90 Virtualization: VT-x L1d cache: 64 KiB L1i cache: 64 KiB L2 cache: 512 KiB L3 cache: 3 MiB NUMA node0 CPU(s): 0-3 Vulnerability Itlb multihit: KVM: Mitigation: Split huge pages Vulnerability L1tf: Mitigation; PTE Inversion; VMX conditional cache flushes, SMT vulnerable Vulnerability Mds: Mitigation; Clear CPU buffers; SMT vulnerable Vulnerability Meltdown: Mitigation; PTI Vulnerability Spec store bypass: Mitigation; Speculative Store Bypass disabled via prctl and seccomp Vulnerability Spectre v1: Mitigation; usercopy/swapgs barriers and __user pointer sanitization Vulnerability Spectre v2: Mitigation; Full generic retpoline, IBPB conditional, IBRS_FW, STIBP conditional, RSB filling Vulnerability Srbds: Vulnerable: No microcode Vulnerability Tsx async abort: Mitigation; Clear CPU buffers; SMT vulnerable Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq d tes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb invpcid_single pti ssbd ibrs ibpb stibp tpr_shadow vnmi flexpri ority ept vpid ept_ad fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx rdseed adx smap clflushopt intel_pt xsave opt xsavec xgetbv1 xsaves dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp md_clear flush_l1d getting cpu information using proc/cpuinfo file 1  cat /proc/cpuinfo   in my case I am getting following output\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108  processor : 0 vendor_id : GenuineIntel cpu family : 6 model : 78 model name : Intel(R) Core(TM) i5-6300U CPU @ 2.40GHz stepping : 3 microcode : 0xd6 cpu MHz : 500.010 cache size : 3072 KB physical id : 0 siblings : 4 core id : 0 cpu cores : 2 apicid : 0 initial apicid : 0 fpu : yes fpu_exception : yes cpuid level : 22 wp : yes flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb invpcid_single pti ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx rdseed adx smap clflushopt intel_pt xsaveopt xsavec xgetbv1 xsaves dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp md_clear flush_l1d bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs taa itlb_multihit srbds bogomips : 4999.90 clflush size : 64 cache_alignment : 64 address sizes : 39 bits physical, 48 bits virtual power management: processor : 1 vendor_id : GenuineIntel cpu family : 6 model : 78 model name : Intel(R) Core(TM) i5-6300U CPU @ 2.40GHz stepping : 3 microcode : 0xd6 cpu MHz : 500.002 cache size : 3072 KB physical id : 0 siblings : 4 core id : 1 cpu cores : 2 apicid : 2 initial apicid : 2 fpu : yes fpu_exception : yes cpuid level : 22 wp : yes flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb invpcid_single pti ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx rdseed adx smap clflushopt intel_pt xsaveopt xsavec xgetbv1 xsaves dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp md_clear flush_l1d bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs taa itlb_multihit srbds bogomips : 4999.90 clflush size : 64 cache_alignment : 64 address sizes : 39 bits physical, 48 bits virtual power management: processor : 2 vendor_id : GenuineIntel cpu family : 6 model : 78 model name : Intel(R) Core(TM) i5-6300U CPU @ 2.40GHz stepping : 3 microcode : 0xd6 cpu MHz : 500.004 cache size : 3072 KB physical id : 0 siblings : 4 core id : 0 cpu cores : 2 apicid : 1 initial apicid : 1 fpu : yes fpu_exception : yes cpuid level : 22 wp : yes flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb invpcid_single pti ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx rdseed adx smap clflushopt intel_pt xsaveopt xsavec xgetbv1 xsaves dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp md_clear flush_l1d bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs taa itlb_multihit srbds bogomips : 4999.90 clflush size : 64 cache_alignment : 64 address sizes : 39 bits physical, 48 bits virtual power management: processor : 3 vendor_id : GenuineIntel cpu family : 6 model : 78 model name : Intel(R) Core(TM) i5-6300U CPU @ 2.40GHz stepping : 3 microcode : 0xd6 cpu MHz : 500.008 cache size : 3072 KB physical id : 0 siblings : 4 core id : 1 cpu cores : 2 apicid : 3 initial apicid : 3 fpu : yes fpu_exception : yes cpuid level : 22 wp : yes flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb invpcid_single pti ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx rdseed adx smap clflushopt intel_pt xsaveopt xsavec xgetbv1 xsaves dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp md_clear flush_l1d bugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs taa itlb_multihit srbds bogomips : 4999.90 clflush size : 64 cache_alignment : 64 address sizes : 39 bits physical, 48 bits virtual power management:   Use lshw command using list hardware shows all hardware information. To narrow down output only for cpu we\nuse -class CPU flag\n1  sudo lshw -class CPU   Use hwinfo command hwinfo is a command line tool to get hardware information of your Linux system.\nfirst we need to install hwinfo using following command\n1  sudo apt install hwinfo   Once install we can run command\nhwinfo --cpu dmidecode dimidecode command retrieve various type of hardware information in linux system. to get only processor related information following command we use\n1  sudo dmidecode --type processor   ","description":"","id":1,"section":"bits","tags":null,"title":"How to Check Cpu Info in Linux","uri":"https://polodev.github.io/learning/bits/how-to-check-cpu-info-in-linux/"},{"content":"to know about ram To display the total amount of ram in ubuntu\n1  free   default size show in kilobyte unit\nTo display the total amount of ram in ubuntu in megabyte mb unit\n1  free -m   To display the total amount of ram in ubuntu in human friendly unit\n1  free -h   To display RAM type and speed, use the command:\n1  sudo lshw -c memory   to know about services To know about background processed services\n1  service --status-all   To stop a running service, enter the command:\n1  sudo service \u0026lt;name\u0026gt; stop   ","description":"","id":2,"section":"bits","tags":null,"title":"How to Know Service Process and Ram Status in Ubuntu Linux","uri":"https://polodev.github.io/learning/bits/how-to-know-service-process-and-ram-status-in-ubuntu-linux/"},{"content":"Initially, default mysql settings, comes with \u0026ldquo;auth_socket\u0026rdquo; plugin for root user.\nIn my case I was unable to login to phpmyadmin from web browser using root user\nLogin to mysql To see which plugin used for specific user we need to login to our mysql from command line\n1  sudo mysql -uroot   Plugin used for user in mysql Once we login to mysql, we can view current used plugin for user, using following code\n1 2  use mysql; SELECT user,plugin,host FROM mysql.user;   Alter user for replacing auth_socket plugin by mysql_native_password we can change user plugin using following code\n1  ALTER USER \u0026#39;root\u0026#39;@\u0026#39;localhost\u0026#39; IDENTIFIED WITH mysql_native_password BY \u0026#39;\u0026#39;;   here I kept password empty string\nthanks\n","description":"","id":3,"section":"bits","tags":null,"title":"How to Replace Auth Socket by Mysql Native Password","uri":"https://polodev.github.io/learning/bits/how-to-replace-auth-socket-by-mysql-native-password/"},{"content":"Git credential storing using Libsecret Installing libsecret\n1  sudo apt install libsecret-1-0 libsecret-1-dev   Run make command for recompile\n1 2  cd /usr/share/doc/git/contrib/credential/libsecret sudo make   Update git credential.helper\n1  git config --global credential.helper /usr/share/doc/git/contrib/credential/libsecret/git-credential-libsecret   Alternative - git cache credential helper If you don\u0026rsquo;t want to install anything you can use git credential helper.\nGit Cache is quite secure and it keeps data only in memory.\nIt’s fine for security, but every time you open new session, you need to type credentials again. Memory is purged after 15 minutes (900 seconds ) by default, but it can be changed with optional timeout parameter.\n1  git config --global credential.helper \u0026#39;cache --timeout=300\u0026#39;   ","description":"","id":4,"section":"bits","tags":null,"title":"How to Store Git Credential in Ubuntu Linux Using Libsecret","uri":"https://polodev.github.io/learning/bits/how-to-store-git-credential-in-ubuntu-linux-using-libsecret/"},{"content":"Git clone and update submodule later clone the repository\n1  git clone \u0026lt;git repository\u0026gt;   You have to do two things to update submodule\n1 2  git submodule init git submodule update   Git cloning including submodules In git 2.13 version and later, \u0026ndash;recurse-submodules can be used instead of \u0026ndash;recursive:\n1  git clone --recurse-submodules -j8 git://github.com/username/repository.git   heres, -j8 is an optional performance optimization that became available in version 2.8, and fetches up to 8 submodules at a time in parallel. for more details man git-clone\nWith version 1.9 of Git up until version 2.12 (-j flag only available in version 2.8+):\n1  git clone --recursive -j8 git://github.com/username/repository.git   With version 1.6.5 of Git and later, you can use:\n1  git clone --recursive git://github.com/username/repository.git   ","description":"","id":5,"section":"bits","tags":null,"title":"How to Clone a Git Project With Submodule","uri":"https://polodev.github.io/learning/bits/how-to-clone-a-git-project-with-submodule/"},{"content":"demo article line 1 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Magnam, pariatur.\ndemo article line 2 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ea delectus, vitae consectetur sequi rerum dolores. Voluptas, tenetur officiis fugit veritatis, id doloremque!\ndemo article line 3 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Deserunt dolore recusandae porro. Laudantium molestias, optio, quis incidunt dolores voluptatum dignissimos natus temporibus non explicabo aliquid nemo, odio deleniti veniam enim, fugit dolor ratione.\n","description":"","id":6,"section":"articles","tags":[""],"title":"Demo Article","uri":"https://polodev.github.io/learning/articles/demo-article/"},{"content":"demo article line 1 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Magnam, pariatur.\ndemo article line 2 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ea delectus, vitae consectetur sequi rerum dolores. Voluptas, tenetur officiis fugit veritatis, id doloremque!\ndemo article line 3 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Deserunt dolore recusandae porro. Laudantium molestias, optio, quis incidunt dolores voluptatum dignissimos natus temporibus non explicabo aliquid nemo, odio deleniti veniam enim, fugit dolor ratione.\n","description":"","id":7,"section":"snippets","tags":[""],"title":"Demo Snippet","uri":"https://polodev.github.io/learning/snippets/demo-snippet/"},{"content":"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Officiis, libero. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Pariatur nostrum mollitia nulla temporibus eaque quas laborum iusto, voluptatibus, dolor optio consectetur autem atque sapiente. Eveniet rem fugit illum odio rerum.\nLorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipisicing elit. Pariatur nostrum mollitia nulla temporibus eaque quas laborum iusto, voluptatibus, dolor optio consectetur autem atque sapiente. Eveniet rem fugit\nconsectetur adipisicing elit. Officiis, libero. Pariatur nostrum mollitia nulla temporibus eaque quas laborum iusto, voluptatibus, dolor optio consectetur autem atque sapiente. Eveniet rem fugit illum odio rerum.\nLorem ipsum dolor sit amet, consectetur adipisicing elit. Officiis, libero. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Pariatur nostrum mollitia nulla temporibus eaque quas laborum iusto, voluptatibus, dolor optio consectetur autem atque sapiente. Eveniet rem fugit illum odio rerum.\n","description":"","id":8,"section":"posts","tags":["wordpress","wordpress-ajax"],"title":"Ajax in Wordpress Using Admin Ajax.php","uri":"https://polodev.github.io/learning/posts/ajax-in-wordpress-using-admin-ajax.php/"},{"content":"Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.\nHugo makes use of a variety of open source projects including:\n https://github.com/russross/blackfriday https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper  Hugo is ideal for blogs, corporate websites, creative portfolios, online magazines, single page applications or even a website with thousands of pages.\nHugo is for people who want to hand code their own website without worrying about setting up complicated runtimes, dependencies and databases.\nWebsites built with Hugo are extremelly fast, secure and can be deployed anywhere including, AWS, GitHub Pages, Heroku, Netlify and any other hosting provider.\nLearn more and contribute on GitHub.\n","description":"Hugo, the world’s fastest framework for building websites","id":9,"section":"","tags":null,"title":"About","uri":"https://polodev.github.io/learning/about/"}]